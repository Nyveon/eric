@use "sass:math";

$noise-backgrounds: 8;

body {
	background-color: $color-background;
}

body#home main {
	overflow: hidden;

	//height: 200vh;

	font-family: "Lato", sans-serif;
	font-weight: 100;
	color: #fff;

	#first-page {
		@include flex(row, center, center);
		width: 100%;
		height: 100vh;

		#nameplate {
			@include flex(column, center, center);
			@include size(16rem);

			border-radius: 1%;

			background-color: $color-nameplate;
			box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,
				rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,
				rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;

			> :first-child {
				font-size: 3rem;
				height: 50%;
				display: flex;
				align-items: flex-end;
				padding-bottom: 0.8rem;
			}

			#links {
				@include flex(column, center, center);
				margin-top: 1rem;

				a {
					@include flex(row, center, center);
					margin-bottom: 0.5rem;

					img {
						@include size(1.6rem);
						margin-right: 0.5rem;
						transition: transform 0.2s ease-in-out;
					}

					&:hover {
						font-weight: 700;

						img {
							transform: scale(1.1);
						}
					}
				}
			}
		}
	}

	#background {
		@include size(100%);
		position: fixed;
		overflow: hidden;
		pointer-events: none;
		z-index: -1;

		#blob {
			@include absolute(50%, 50%, 50%, 50%);
			@include size(40vmax);
			z-index: -30;
			translate: -50% -50%;
			border-radius: 50%;

			background-color: $color-blob-fallback;
			background: linear-gradient(
				0deg,
				$color-blob-1 0%,
				$color-blob-2 50%,
				$color-blob-1 100%
			);
			opacity: 0.5;

			animation: rotate 10s linear infinite;

			@keyframes rotate {
				0% {
					transform: rotate(0deg);
				}
				50% {
					scale: 1 2;
				}
				100% {
					transform: rotate(360deg);
				}
			}
		}

		#blur {
			@include absolute();
			@include size(100vmax);
			z-index: -20;
			backdrop-filter: blur(12vmax);
		}

		#noise {
			@include size(100%);
			position: relative;
			overflow: hidden;
			z-index: -10;

			div {
				@include absolute();
				@include size(100%);
				opacity: math.div(0.2, $noise-backgrounds);
				filter: contrast(1000%);

				background-repeat: repeat;
				background-attachment: fixed;
				image-rendering: pixelated;

				@for $i from 0 through $noise-backgrounds {
					&:nth-child(#{$i + 1}) {
						$image: $i % 3;
						background-image: url(../img/noise-#{$image}.png);
						animation: move-#{$i} $i * 3s + 101s linear infinite;
					}
				}

				$angle: math.div(360deg, $noise-backgrounds);

				@for $i from 0 through $noise-backgrounds {
					@keyframes move-#{$i} {
						0% {
							background-position: $i * 3% $i * 5%;
						}
						100% {
							background-position: (math.sin($i * $angle) * 100%)
								(math.cos($i * $angle) * 100%);
						}
					}
				}
			}
		}
	}
}
